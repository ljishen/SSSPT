---
- block:

  - name: ({{ notes }}) run workload dependent pre-conditioning on {{ device_node_name }}
    become: yes
    command: >
      {{ fio_dir }}/fio {{ pre_conditioning_job_filename }} --offset={{ io_offset | default(0) }}
      --output-format={{ output_format }}
      --output {{ output_file }}
    args:
      chdir: "{{ workdir }}"

  - name: ({{ notes }}) get throughput in kbytes
    shell: cat {{ output_file }} | {{ workdir }}/jq '{{ job_key_path }}.bw_mean'
    register: comm_res

  - debug:
      msg: "throughput: {{ comm_res.stdout }} KB/s"
      verbosity: "{{ verbosity }}"

  - name: ({{ notes }}) save throughput for steady state detection
    set_fact:
      # convert from KB/s to MB/s before adding to the list
      throughputs_values: >
        {{ throughputs_values | default([]) + [ comm_res.stdout | float / 1024 ] }}

  - debug:
      msg: "current throughput values (MB/s): {{ throughputs_values }}"
      verbosity: "{{ verbosity }}"

  - name: ({{ notes }}) check steady state
    command: >
      {{ role_path }}/files/verify_ss.py '{{ throughputs_values }}' {{ measurement_window_size }}
    register: comm_res
    ignore_errors: yes

  - name: ({{ notes }}) update loop condition
    set_fact:
      steady_state: "{{ True if comm_res.rc == 0 else False }}"

  - name: ({{ notes }}) get total performed IO in bytes
    shell: cat {{ output_file }} | {{ workdir }}/jq '{{ job_key_path }}.io_bytes'
    register: comm_res
    when: not steady_state

  - debug:
      msg: "total IO performed: {{ comm_res.stdout }} bytes"
      verbosity: "{{ verbosity }}"

  - name: ({{ notes }}) update offset for next round
    set_fact:
      io_offset: >
        {% set offset_num = io_offset | default(0) | int + comm_res.stdout | int -%}
        {% set size_of_range = (device_size | int * active_range / 100) | int -%}
        {% if offset_num >= size_of_range -%}
          {% set offset_num = offset_num - size_of_range -%}
        {% endif -%}
        {{ offset_num }}
    when: not steady_state

  when: not steady_state
...
