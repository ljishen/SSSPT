---
- block:

    - name: ({{ notes }}) run workload dependent pre-conditioning on {{ device_node_name }}
      become: yes
      command: >
        {{ fio_command_prefix }} {{ fio_dir }}/fio
        {{ pre_conditioning_job_file }} --offset={{ io_offset | default(0) }}
        --output-format={{ output_format }}
        --output {{ remote_output_file }}

    - include_tasks: backup_output_file.yml

    - name: set value key prefix
      set_fact:
        value_key_prefix: "jobs[0].{{ 'read' if cur_rwmixread == 100 else 'write' }}."

    - name: ({{ notes }}) save throughput for steady state detection
      set_fact:
        # Convert from KB/s to MB/s before adding to the list
        # See the difference between bw and bw_mean
        # http://maillist.kernel.dk/fio-devel/0054.html
        tracking_values: >
          {%- set bw_num = lookup('file', local_output_file) | from_json | json_query(value_key_prefix + 'bw') / 1024 -%}
          {{ tracking_values + [ bw_num ] }}

    - name: ({{ notes }}) check steady state
      command: >
        {{ remote_scripts_dir }}/{{ verify_steady_state_script_filename }}
        '{{ tracking_values }}' {{ measurement_window_size }}
      register: comm_res
      ignore_errors: yes

    - name: ({{ notes }}) update offset for next round
      set_fact:
        io_offset: >
          {%- if comm_res.rc == 0 or cur_round == maximum_rounds -%}
            0
          {% else -%}
            {% set offset_incr = lookup('file', local_output_file) | from_json | json_query(value_key_prefix + 'io_bytes') -%}
            {% set offset_num = io_offset | default(0) | int + offset_incr -%}
            {% set size_of_range = (device_size | int * active_range / 100) | int -%}
            {% if offset_num >= size_of_range -%}
              {% set offset_num = offset_num - size_of_range -%}
            {% endif -%}
            {{ offset_num }}
          {% endif -%}

    - name: ({{ notes }}) update loop condition
      set_fact:
        steady_state: "{{ True if comm_res.rc == 0 else False }}"

  when: not steady_state
...
