---
- block:

  - name: ({{ notes }}) backup old output file
    copy:
      backup: yes
      content: ""
      dest: "{{ output_file }}"
      force: yes

  - name: ({{ notes }}) run workload dependent pre-conditioning on {{ device_node_name }}
    become: yes
    command: >
      {{ fio_dir }}/fio {{ pre_conditioning_job_filename }} --offset={{ io_offset | default(0) }}
      --output-format={{ output_format }}
      --output {{ output_file }}
    args:
      chdir: "{{ workdir }}"

  - set_fact:
      value_key_prefix: "jobs[0].{{ 'read' if cur_rwmixread == 100 else 'write' }}."

  - name: ({{ notes }}) save throughput for steady state detection
    set_fact:
      # Convert from KB/s to MB/s before adding to the list
      # See the difference between bw and bw_mean
      # http://maillist.kernel.dk/fio-devel/0054.html
      tracking_values: >
        {{ tracking_values + [ lookup('file', output_file) | from_json | json_query(value_key_prefix + 'bw') / 1024 ] }}

  - debug:
      msg: "current throughput values (MB/s): {{ tracking_values }}"
      verbosity: "{{ verbosity }}"

  - name: ({{ notes }}) check steady state
    command: >
      {{ role_path }}/files/verify_ss.py '{{ tracking_values }}' {{ measurement_window_size }}
    register: comm_res
    ignore_errors: yes

  - name: ({{ notes }}) update offset for next round
    set_fact:
      io_offset: >
        {%- if comm_res.rc == 0 or cur_round == maximum_rounds -%}
          0
        {% else -%}
          {% set offset_num = io_offset | default(0) | int + lookup('file', output_file) | from_json | json_query(value_key_prefix + 'io_bytes') -%}
          {% set size_of_range = (device_size | int * active_range / 100) | int -%}
          {% if offset_num >= size_of_range -%}
            {% set offset_num = offset_num - size_of_range -%}
          {% endif -%}
          {{ offset_num }}
        {% endif -%}

  - name: ({{ notes }}) update loop condition
    set_fact:
      steady_state: "{{ True if comm_res.rc == 0 else False }}"

  when: not steady_state
...
