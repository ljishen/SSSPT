---
- block:

  - name: ({{ notes }}) run workload dependent pre-conditioning on {{ device_node_name }}
    become: yes
    command: >
      {{ fio_dir }}/fio {{ pre_conditioning_job_file }}
      --output-format={{ output_format }}
      --output {{ remote_output_file }}

  - include_tasks: backup_output_file.yml

  - name: ({{ notes }}) save average latency for steady state detection
    set_fact:
      tracking_values: >
        {%- set total_ios    = lookup('file', local_output_file) |
                                      from_json |
                                      json_query('jobs[0].[read, write][].total_ios') -%}
        {% set lat_ns_means  = lookup('file', local_output_file) |
                                      from_json |
                                      json_query('jobs[0].[read, write][].lat_ns.mean') -%}
        {{ tracking_values +
          [ (lat_ns_means[0] * total_ios[0] + lat_ns_means[1] * total_ios[1]) / sum(total_ios) ] }}

  - name: ({{ notes }}) check steady state
    script: >
      {{ role_path }}/files/verify_ss.py '{{ tracking_values }}' {{ measurement_window_size }}
    register: comm_res
    ignore_errors: yes

  - name: ({{ notes }}) update loop condition
    set_fact:
      steady_state: "{{ True if comm_res.rc == 0 else False }}"

  when: not steady_state
...
