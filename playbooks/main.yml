---
- hosts: all
  any_errors_fatal: true
  tags: [ 'always' ]
  vars:
    yeses: ["yes", "y"]

  pre_tasks:
    # vars_prompt does not expand variables defined in inventory. (ansible 2.6.2)
    # https://github.com/ansible/ansible/issues/32723 (possible related issue)
    - name: confirm tests
      pause:
        prompt: >
          Are you sure you want to run performance tests
          for {{ device_node_name }} on {{ inventory_hostname }} (yes/no)?
        echo: yes
      register: confirm_res
      failed_when: confirm_res.user_input not in yeses

    - name: get performance tests to run
      set_fact:
        run_perf_tests: "{{ ansible_run_tags | intersect(role_names) }}"

    - debug:
        msg: >
          Please specify at least one of performance tests
          {{ role_names }} using '--tags'
      when: run_perf_tests | length == 0
      failed_when: run_perf_tests | length == 0

    - name: install dependent apt packages (remote)
      become: yes
      apt:
        autoclean: yes
        install_recommends: no
        name:
          - libaio-dev
          - build-essential
          - hdparm
        state: present
        update_cache: yes

    - name: install dependent apt packages (local)
      become: yes
      run_once: yes
      apt:
        autoclean: yes
        install_recommends: no
        name:
          - python3-numpy
        state: present
        update_cache: yes
      delegate_to: localhost

    - name: ensure the presence of dirs
      become: yes
      file:
        owner: "{{ ansible_user }}"
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ remote_job_files_dir }}"
        - "{{ remote_scripts_dir }}"

    - name: download fio {{ fio_version }}
      unarchive:
        creates: "{{ fio_dir }}/fio"
        dest: "{{ workdir }}"
        keep_newer: no
        owner: "{{ ansible_user }}"
        remote_src: yes
        src: https://codeload.github.com/axboe/fio/tar.gz/fio-{{ fio_version }}
      register: unarchive_res

    - name: compile fio
      command: make -j {{ ansible_processor_vcpus }}
      args:
        chdir: "{{ fio_dir }}"
      when: unarchive_res.skipped is not defined or not unarchive_res.skipped

    - name: download required scripts
      get_url:
        backup: no
        dest: "{{ remote_scripts_dir }}/{{ item.filename }}"
        force: yes
        mode: u+rx
        owner: "{{ ansible_user }}"
        url: https://raw.githubusercontent.com/ljishen/my-awesome-scripts/master/{{ item.path }}/{{ item.filename }}
      loop:
        - { filename: "{{ discard_sectors_script_filename }}", path: "bash/storage" }
        - { filename: "{{ enable_cpufreq_governor_script_filename }}", path: "bash/processor" }
        - { filename: "{{ verify_steady_state_script_filename }}", path: "python/performance" }

    - name: get size of {{ device_node_name }} in bytes
      become: yes
      command: blockdev --getsize64 {{ device_node_name }}
      register: comm_res
      changed_when: False

    - name: store size of {{ device_node_name }}
      set_fact:
        device_size: "{{ comm_res.stdout }}"

    - name: config scaling governor for online CPUs
      become: yes
      command: "{{ remote_scripts_dir }}/{{ enable_cpufreq_governor_script_filename }} {{ cpu_scaling_governor }}"
      register: cpu_config_res
      changed_when: "cpu_config_res.rc == 0"

    - name: load global variables for performance test specification
      include_vars:
        file: "{{ test_spec }}.yml"

    - name: update write caching
      become: yes
      command: hdparm -W{{ write_caching }} {{ device_node_name }}
      register: comm_res
      changed_when: "comm_res.rc == 0"

    - name: check and kill remnant pre-conditioning process
      become: yes
      shell: pkill -SIGKILL -u "$(id -u)" -f 'fio\s+{{ pre_conditioning_job_file }}'
      register: kill_res
      ignore_errors: yes
      changed_when: "kill_res.rc == 0"

  roles:
    - role: throughput
      when: role_path | basename in run_perf_tests
    - role: iops
      when: role_path | basename in run_perf_tests
    - role: lat
      when: role_path | basename in run_perf_tests
...
